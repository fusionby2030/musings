[
  {
    "objectID": "ML/a_hully_hull.html",
    "href": "ML/a_hully_hull.html",
    "title": "Watermelons without juice and the search for UQ",
    "section": "",
    "text": "With high dimensional data, when splitting the data into train-test subsets, it is very unlikely that the test set falls into the convex hull of the training set, thus by measuring performance on the test set, we are likely measuring performance of the extrapolation rather than interpolation capabilities of the model1 (described for dummies here).\nThe dilema for me is if we are always extrapolating, then somehow the UQ for a model should be defined in terms of the distance from the convex hull. Therefore, I want to investigate the properties of error in prediction for various models w.r.t the distance from the quiered point to the convex hull of the training set."
  },
  {
    "objectID": "ML/a_hully_hull.html#subset-in-convex-hull",
    "href": "ML/a_hully_hull.html#subset-in-convex-hull",
    "title": "Watermelons without juice and the search for UQ",
    "section": "Subset in convex hull?",
    "text": "Subset in convex hull?\nFirst we need an algorithm to see if a point is within the convex hull of the training set.\n\nMaths\nAlgorithm as a linear programming problem Stackoverflow Implementation\n\nWe can check this then for the JET Pedestal database for varying input dimensions and splits.\n\nNB Is the convex hull defined by the point cloud of input variables as well as target variable? Yes probably."
  },
  {
    "objectID": "ML/a_hully_hull.html#distance-to-convex-hull",
    "href": "ML/a_hully_hull.html#distance-to-convex-hull",
    "title": "Watermelons without juice and the search for UQ",
    "section": "Distance to convex hull?",
    "text": "Distance to convex hull?\nThis is probably tricky, as we would have to calculate the convex hull for a high dimensional space.\nMaybe we should instead quantify the distance of the point to the closest point inside the convex hull?"
  },
  {
    "objectID": "ML/a_hully_hull.html#applications",
    "href": "ML/a_hully_hull.html#applications",
    "title": "Watermelons without juice and the search for UQ",
    "section": "Applications",
    "text": "Applications\n\nCould we make graphs of the error vs distance vs dimenisonality of input space for both the parameter space as well as latent space for DIVA?\nHow does error vs distance to hull vary as a function of model? And input space?"
  },
  {
    "objectID": "ML/posteriors_of_gps.html",
    "href": "ML/posteriors_of_gps.html",
    "title": "Posterior Predicitions of GP",
    "section": "",
    "text": "Fit a GP through BO."
  },
  {
    "objectID": "ML/posteriors_of_gps.html#a-scan-of-power-vs-gas-puff-for-lowhigh-current-or-lowhigh-triangularity",
    "href": "ML/posteriors_of_gps.html#a-scan-of-power-vs-gas-puff-for-lowhigh-current-or-lowhigh-triangularity",
    "title": "Posterior Predicitions of GP",
    "section": "A scan of power vs gas puff for low/high current or low/high triangularity",
    "text": "A scan of power vs gas puff for low/high current or low/high triangularity\nWe can actually recreate Figure 8 from1.\n\nLow \\(\\delta\\)\n\\(I_P\\) 1.4 MA\n\\(B_T\\) 1.7 T\nGas Scan\n\n0.2, 0.8, 1.8\n\nPower scan, 0-25 MW"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Adam Kit",
    "section": "",
    "text": "Adam Kit is studying applications of machine learning towards nuclear fusion as a research assistant at Helsinki University. When not studying plasma physics or deep learning, Adam enjoys suffering in the wilderness and making music."
  },
  {
    "objectID": "about.html#articles",
    "href": "about.html#articles",
    "title": "Adam Kit",
    "section": "Articles",
    "text": "Articles\nTBD\nThe website is enabled by Quarto."
  },
  {
    "objectID": "auto_fusion/automating.html",
    "href": "auto_fusion/automating.html",
    "title": "Some Automating",
    "section": "",
    "text": "Datasets in fusion are commonly but finding relevant time windows of desired signals.\nThis process is commonly done by experts in the field, who know what they are looking for, but is a very manual instensive process. Take for example, the JET Pedestal Database1.\nSo we want to do this process, automatically and possibly compare models trained on JET PDB vs automated JET PDB.\nIdeally the end result is a compiled executable. # What do we want to automate\nWe want H-mode electron density, temperature, and pressure measurements for pedestal analysis at/near the KBM-PB stability boundrary. To do so, we need to identify time windows of near constant or steady state plasma and machine parameters, then find identify when ELMâ€™s occured, and found profile measurements that land near the end of an ELM cycle \\((75-99\\%)\\)."
  },
  {
    "objectID": "auto_fusion/automating.html#finding-h-mode",
    "href": "auto_fusion/automating.html#finding-h-mode",
    "title": "Some Automating",
    "section": "1. Finding H-mode",
    "text": "1. Finding H-mode\nThe amount of power needed to enter H-mode is commonly described as the L-H threshold, or \\(P_{LH}\\).\nAn example of a scaling law derived in terms of machine parameters is given in2:\n\\[P_{\\text{LH}} [\\text{MW}] = 2.15e^{\\pm 0.107} n_{e20}^{0.728 \\pm 0.037} B_T^{0.772 \\pm 0.031} a^{0.975\\pm 0.08} R^{0.999\\pm 0.101 }\\] where \\(B_T\\) [T], \\(n_e\\) [\\(10^{20}\\) m \\(^{-2}\\)], \\(a\\) [m], \\(R\\) [m] are the magnitude of the toroidal magnetic field, line averaged electron density, major and minor plasma radius, respectively. The shaping parameters are sometimes refered to as \\(S\\), or parameterized as the surface area. This can be intuitively thought of as given some volume of plasma, with surface area \\(S\\) and density \\(n\\), that is confined by a magnetic field \\(B\\), there exists some amount of power needed to excited it to pass into a new regime.\nThus, we are looking for the times where the total power injected is greator than \\(P_\\text{LH}\\): \\(P_\\text{TOT} \\geq P_{\\text{LH}}\\), or \\(\\frac{P_\\text{TOT}}{P_{\\text{LH}}} \\geq 1.0\\).\nFor JET, the total power is typically coming from NBI, ICR, and Ohmic heating sources, \\(P_\\text{NBI}, P_\\text{ICR}, P_\\text{OH}\\) and there is some shine through lost deposited on the wall \\(P_\\text{SH}\\), thus \\[P_\\text{TOT} =  P_\\text{NBI} + P_\\text{ICR} + P_\\text{OH} - P_\\text{SH}\\]\n\n\nCode for finding P_TOT/P_LH\nfrom typing import Dict, List\nfrom scipy.interpolate import interp1d \n\ndef p_lh_threshold_martin_scaling_from_pulse_dict(pulse_dict: Dict[str, Dict[str, np.ndarray]]) -> List[np.ndarray]: \n    \"\"\" Using martin scaling we find the ratio of the PTOT/PLH \n    This is done by first interpolating all diagnostics used onto a common time domain \n    The common time domain is given by the lowest order sampled parameter used in the martin scaling \n\n    The power variables are then interpolated to the same axis \n\n    returns the time domain for the lh threshold, plh [MW], the ratio of ptot/plh\n    \"\"\"\n    power_scaling = lambda n, r, a, b : (2.14)*(np.exp(0.107))*(np.power(n*1e-20,0.728))*(np.power(abs(b),0.772))*(np.power(a,0.975))*(np.power(r,0.999))\n    lh_threshold_diagnostic_signal_names = ['kg1l/lad3', 'efit/Rgeo', 'efit/ahor', 'magn/BTF']\n    # Finds the lowest sampled signal so we can interpolate onto that domain\n    data_size_list = [(diag_sig, signal_dims['data'].shape) for diag_sig, signal_dims in pulse_dict.items() if diag_sig in lh_threshold_diagnostic_signal_names]\n    domain_diagnostic, _ = min(data_size_list, key=lambda t: t[1]) # https://docs.python.org/3.8/library/functions.html#min\n    diagnostics_to_interpolate = [d for d in lh_threshold_diagnostic_signal_names if d != domain_diagnostic]\n    time_domain = pulse_dict[domain_diagnostic]['time'].copy()\n\n    interpolated_dict = {domain_diagnostic: pulse_dict[domain_diagnostic]['data']}\n\n    for key in diagnostics_to_interpolate: \n        _interp = interp1d(pulse_dict[key]['time'], pulse_dict[key]['data'])\n        interp_data = _interp(time_domain)\n        interpolated_dict[key] = interp_data\n\n    plh_threshold = 1e6*power_scaling(*[interpolated_dict[key] for key in lh_threshold_diagnostic_signal_names])\n    # Now to compare against the input power \n    power_diagnostic_signal_names = ['power/PNBI_TOT', 'power/P_OH', 'power/PICR_TOT', 'nbip/shi']\n    total_power = np.zeros_like(time_domain)\n    for key in power_diagnostic_signal_names: \n        try: \n            _interp = interp1d(pulse_dict[key]['time'], pulse_dict[key]['data'], bounds_error=False, fill_value=0.0)\n            power_interped = _interp(time_domain)\n        except ValueError: \n            power_interped = np.zeros_like(time_domain)\n        except KeyError as e: \n            if e.args[0] == 'nbip/shi':\n                power_interped = np.zeros_like(time_domain)\n            else: \n                raise KeyError('pulse_dict does not contain the following necessary dignostics diagnostics: {}'.format(power_diagnostic_signal_names + lh_threshold_diagnostic_signal_names))\n        if key in ['nbip/sh']: \n            total_power -= power_interped\n        else:     \n            total_power += power_interped\n    ratio_threshold_total_power = total_power / plh_threshold\n    # above_lh_threshold = time_domain[total_power > plh_threshold]\n    # t_start, t_end = above_lh_threshold[0], above_lh_threshold[-1]\n    return [time_domain, plh_threshold, ratio_threshold_total_power]\n\n\n\n\n\n\n\nThis approach picks up the L-H transition, but not the back transition. If we were to use this to define the start and end of H-mode, it is prone to the following artifacts: i) When a PINI drops, the \\(P_{TOT} >= P_{LH}\\) can drop below 1, even though we are still in H-mode, ii) near rampdown, any number of the parameters could spike, (see JET #86540 and 83304), iii) at the very beginning, there is a spike in density\n\n\n\n\n\nBut how to get the time windows for H-mode?"
  },
  {
    "objectID": "auto_fusion/automating.html#finding-steady-states",
    "href": "auto_fusion/automating.html#finding-steady-states",
    "title": "Some Automating",
    "section": "2. Finding steady states",
    "text": "2. Finding steady states\nHere we want to find periods of near-constant global plasma parameters, namely the stored diamagnetic energy, \\(W_\\text{DIA}\\) [J]. The bounds for which a window or period of steady state can occur are made via:\n\n\\(\\frac{P_{TOT}}{P_{LH}} >= 1\\)\ntimes of the window \\(t\\) exist between \\(44 < t < 60\\) (for JET)\n\nThis is temporary, but should exclude times during rampdown and rampup where the LH-HL threshold can occur (although this should be investigated?)\nIdeally, we pass a sliding window over the proposed \\(P_{ratio} > 1\\) that removes outliers.\n\n\n\nAlgorithm to determine where things are in the steady state\n\nUsing rupture3, find the change points in \\(W_\\text{dia}\\)\n\nThe change points are separated by a minimum of 0.5 seconds\n\nFilter the change points selected to be those that fall between bounds set above\nThe times bewteen change points, i.e., windows, are a steady state if the slope of \\(W_\\text{DIA}\\) between the change points is less than \\(15%\\) the mean of the window.\n\n\n\nCode for finding steady states\nimport ruptures as rpt \nfrom typing import Dict, List, Tuple\ndef find_steady_state_windows(pulse_dict: Dict[str, Dict[str, np.ndarray]]) -> Tuple[List[Tuple[float, float]], Tuple[float, float], Tuple[np.ndarray, np.ndarray]]: \n    \"\"\" Uses ruptures to find steady state windows using the PLH threshold and the diamagnetic energy \"\"\"\n    if not 'ehtr/wdia' in pulse_dict.keys(): raise KeyError('must include ehtr/wdia in list of diagnostics to pull')\n    # FREE PARAMETERS \n    MIN_TIME_WINDOW_SIZE: float = 0.5\n    MAX_DEVIATION_OF_MEAN_FROM_SLOP = 0.15 # Percent deviation for a window to be marked as a steady state\n    lh_domain, _, ratio_threshold_total_power = p_lh_threshold_martin_scaling_from_pulse_dict(pulse_dict)\n    h_mode_window = np.logical_and(ratio_threshold_total_power > 1.0, np.logical_and(lh_domain > 44, lh_domain < 60)) # TODO: This is not scalable for AUG\n    t_start_hmode, t_end_hmode = lh_domain[h_mode_window][0], lh_domain[h_mode_window][-1]\n\n    time, data = pulse_dict['ehtr/wdia']['time'], pulse_dict['ehtr/wdia']['data']\n    dt = (time[-1] - time[0])/len(time)\n    dt = np.diff(time).mean()\n    window_size = int(MIN_TIME_WINDOW_SIZE / dt)\n    if window_size < 100: \n        print(f'window_size too small {window_size}, the estimated sampling frequency is {dt:.5}')\n        window_size = 1000 \n    algo = rpt.Pelt(model='l2', min_size=window_size).fit(data)\n    pen = np.log(len(time)) # This is tehcnically also a free parameter \n    my_bkps = algo.predict(pen=pen)\n    t_bkps = np.array([time[bkp] for bkp in my_bkps if bkp != len(time)])\n    t_bkps_in_hmode = t_bkps[np.logical_and(t_bkps > t_start_hmode, t_bkps <= t_end_hmode)]\n\n    t_window_steady_states = []\n    for t_idx, t in enumerate(t_bkps_in_hmode): \n        if t_idx == 0: \n            t_beg, t_end = t_start_hmode, t\n        elif t_idx == len(t_bkps_in_hmode): \n            t_beg, t_end = t, t_end_hmode\n        else: \n            t_beg, t_end = t_bkps_in_hmode[t_idx-1], t\n        _window_bool = np.logical_and(time >= t_beg, time <= t_end)\n        slope = (data[_window_bool][-1] - data[_window_bool][0]) / (time[_window_bool][-1] - time[_window_bool][0])\n        if abs(slope / data[_window_bool].mean()) < MAX_DEVIATION_OF_MEAN_FROM_SLOP: \n            t_window_steady_states.append((t_beg, t_end))\n    return t_window_steady_states, (t_start_hmode, t_end_hmode), (lh_domain, ratio_threshold_total_power)\n\n\n\n\n\n\n\nThis approach has various failure modes, namely i) uneven sampling rate of the WDIA signal leads to the minimum window size to be much less than 0.5, ii) the slope/mean calculation curently fails if the start and end are very similar values, so one should ideally include a std metric"
  },
  {
    "objectID": "auto_fusion/automating.html#elm-timings",
    "href": "auto_fusion/automating.html#elm-timings",
    "title": "Some Automating",
    "section": "3. ELM Timings",
    "text": "3. ELM Timings\nFor each time window \\([t_1, t_2]\\) given by the above steady state algorithm, we apply the following algorithm to determine \\(t_\\text{ELM}\\) (s):\n\nFind the most likely ELM frequency, \\(\\hat{f}_\\text{ELM}\\) of the window by taking the FFT of a normalised TBEO signal. The number of data points between ELMs is then likely to be \\(a\\frac{\\hat{f}_\\text{ELM}}{T}\\) where \\(T\\) is the sampling frequency of the signal, and \\(a \\in [0, 1]\\) is a free parameter. Here I suggest using \\(a=0.66\\), but offer no reasoning why.\n\n\n\nCode for finding ELM timings\nfrom scipy.fft import dct, idct, fft, fftfreq\nfrom scipy import signal as sig\nfrom typing import Dict, Tuple\ndef get_elm_timings_from_pulse_dict(pulse_dict: Dict[str, Dict[str, np.ndarray]], param='edg8/tbeo') -> Tuple[List[Tuple[float, float]], List[np.ndarray], Tuple[float, float]]: \n    t_window_steady_states, (t_start_hmode, t_end_hmode), (lh_domain, ratio_threshold_total_power) = find_steady_state_windows(pulse_dict)\n    elm_param_signals = ['edg8/tbeo', 'edg8/tbei']\n\n    elm_timings = []\n    time, data = example_dict[param]['time'], example_dict[param]['data']\n    for n, (t_beg, t_end) in enumerate(t_window_steady_states): \n        _window_bool = np.logical_and(time >= t_beg, time <= t_end)\n        _time, _data = time[_window_bool], data[_window_bool]\n        N = len(_time)\n        T = np.diff(_time).mean() \n        _mean, _std = _data.mean(), _data.std()\n        # To get rid of the close to 0 frequency in the fft, we subtract the mean and divide by std. \n        tbeo_dat_normed = (_data - _mean)/_std\n        yf_og = fft(tbeo_dat_normed)\n        xf = fftfreq(N, T)[:N//2]\n\n        likely_freq_og = xf[np.argmax(2.0/N*np.abs(yf_og[0:N//2]))]\n        likely_freq_time_og = 1.0/ likely_freq_og\n        num_samples_patience_og = int(likely_freq_time_og / T)\n        distance_in_indicie_space = num_samples_patience_og - (num_samples_patience_og // 3)\n        peaks_og, properties_og = sig.find_peaks(_data,  height=_mean+_std, distance=distance_in_indicie_space) # TODO: Free parameter here! \n        window_elm_timings = _time[peaks_og]\n        elm_timings.append(window_elm_timings)\n    return t_window_steady_states, elm_timings, (t_start_hmode, t_end_hmode)\n\n\n\n\n\n\n\nAlthough this has many failure modes, it still gives a pretty good starting point to the ELM timings, which should in the end be done by hand (likely) or even clustering\n\n\n\n\n\nWhat does this look like in terms of the full pulse sequence for machine parameters?\n\n\n\n\n\nWe see that the periods of steady state are often occuring with near constant machine parameters. One could likely study dynamics of the pedestal evolution, or just take an overall average for the whole pulse when MPS are the same.\n\n\n\n\n\nMachine parameters\n\nShaping: \\(R\\), \\(a\\), \\(\\delta_u\\), \\(\\delta_o\\), \\(V_P\\), Gas: \\(\\Gamma_D\\), Power: Defined above, Magnetic: \\(q_{95}\\), \\(I_P\\), \\(B_T\\)\n\nGlobal Parameters\n\nRadiated power from bolometer, Diamagnetic Stored energy of the plasma, Line averaged density, Average inner/outer Be II photon flux (ELMs)\n\n\n\n\nNotable other ELM algorithms\n\nAs implemented in4"
  },
  {
    "objectID": "auto_fusion/automating.html#bayesian-fitting",
    "href": "auto_fusion/automating.html#bayesian-fitting",
    "title": "Some Automating",
    "section": "4. Bayesian fitting",
    "text": "4. Bayesian fitting\nthis isnâ€™t really automating things but rather a better way to fit.\n\nLibraries used\n\nRuptures\nScipy\nnumpy"
  },
  {
    "objectID": "auto_fusion/elm_finding.html",
    "href": "auto_fusion/elm_finding.html",
    "title": "ELM Determination",
    "section": "",
    "text": "edg8/tbeo 0 [44.74 44.76 44.78 44.8  44.83 44.86 44.91 44.93 44.94 44.96 44.98 45.\n 45.02 45.03 45.05 45.07 45.09 45.11 45.13 45.16 45.19 45.21 45.23 45.24\n 45.25 45.26 45.3 ]\nedg8/tbeo 1 [45.31 45.33 45.34 45.37 45.39 45.41 45.44 45.46 45.48 45.5  45.53 45.54\n 45.56 45.57 45.6  45.62 45.63 45.65 45.66 45.68 45.71 45.73 45.76 45.79\n 45.81 45.83 45.86 45.88 45.9  45.91 45.93 45.95 45.98 46.  ]\nedg8/tbeo 2 [46.02 46.03 46.08 46.09 46.11 46.13 46.15 46.16 46.18 46.21 46.23 46.25\n 46.26 46.29 46.31 46.33 46.34 46.36 46.38]\nedg8/tbeo 3 [46.4  46.42 46.44 46.46 46.48 46.5  46.52 46.54 46.56 46.59 46.61 46.64\n 46.66 46.68 46.7  46.72 46.74 46.77]\nedg8/tbeo 4 [47.28 47.29 47.31 47.33 47.34 47.36 47.37 47.38 47.4  47.42 47.45 47.47\n 47.49 47.51 47.53 47.54 47.57 47.58 47.59 47.62 47.65 47.66]\nedg8/tbeo 5 [47.68 47.7  47.73 47.75 47.78 47.8  47.82 47.85 47.87 47.9  47.92 47.95\n 47.98 47.99 48.01 48.04 48.06 48.09 48.12 48.15 48.17 48.19 48.22 48.24\n 48.26 48.29]\nedg8/tbeo 6 [48.31 48.33 48.36 48.39 48.42 48.45 48.48 48.5  48.53 48.57 48.6  48.62\n 48.65 48.67 48.69 48.72 48.74]\nedg8/tbeo 7 [49.21 49.23 49.26 49.28 49.31 49.32 49.35 49.37 49.38 49.41 49.43 49.44\n 49.46 49.5  49.51 49.54 49.56 49.57 49.59 49.61 49.62]\nedg8/tbeo 8 [49.64 49.69 49.71 49.74 49.76 49.78 49.8  49.83 49.84 49.87 49.89 49.92\n 49.94 49.95 49.98 50.01]\n\n\nedg8/tbei 0 [44.74 44.76 44.77 44.8  44.83 44.86 44.91 44.92 44.93 44.94 44.96 44.97\n 44.99 45.02 45.03 45.05 45.07 45.08 45.11 45.12 45.15 45.19 45.21 45.22\n 45.24 45.25 45.26 45.28 45.3 ]\nedg8/tbei 1 [45.31 45.32 45.34 45.37 45.38 45.41 45.43 45.46 45.48 45.5  45.52 45.54\n 45.56 45.57 45.6  45.61 45.63 45.66 45.68 45.7  45.72 45.76 45.79 45.83\n 45.85 45.88 45.89 45.91 45.93 45.95 45.97 45.99]\nedg8/tbei 2 [46.02 46.03 46.08 46.09 46.1  46.11 46.13 46.15 46.16 46.18 46.21 46.23\n 46.25 46.26 46.29 46.3  46.32 46.34 46.36 46.38]\nedg8/tbei 3 [46.4  46.42 46.44 46.46 46.48 46.5  46.52 46.54 46.56 46.57 46.59 46.6\n 46.61 46.63 46.64 46.66 46.68 46.7  46.72 46.74 46.76 46.79]\nedg8/tbei 4 [47.27 47.29 47.31 47.33 47.34 47.35 47.36 47.38 47.4  47.42 47.45 47.47\n 47.49 47.51 47.53 47.54 47.57 47.58 47.59 47.62 47.65 47.66]\nedg8/tbei 5 [47.68 47.7  47.72 47.75 47.77 47.8  47.82 47.85 47.87 47.9  47.92 47.95\n 47.97 47.99 48.01 48.04 48.06 48.09 48.12 48.15 48.17 48.18 48.21 48.23\n 48.26 48.29]\nedg8/tbei 6 [48.31 48.32 48.33 48.34 48.35 48.37 48.39 48.4  48.42 48.44 48.47 48.5\n 48.53 48.54 48.57 48.58 48.6  48.62 48.64 48.67 48.68 48.69 48.71 48.74]\nedg8/tbei 7 [49.21 49.23 49.26 49.27 49.28 49.31 49.32 49.34 49.36 49.37 49.38 49.41\n 49.42 49.44 49.45 49.46 49.49 49.51 49.52 49.54 49.56 49.57 49.59 49.61\n 49.62]\nedg8/tbei 8 [49.64 49.68 49.71 49.73 49.75 49.78 49.8  49.82 49.84 49.86 49.89 49.91\n 49.95 49.98 50.01]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [47.73 47.76 47.77 47.79 47.82 47.86 47.94 47.97 47.99 48.01 48.04 48.06\n 48.08 48.16 48.2  48.23]\nedg8/tbeo 1 [48.31 48.39 48.47 48.53 48.61]\nedg8/tbeo 2 [48.61 48.67 48.73 48.8  48.84]\nedg8/tbeo 3 [48.94 48.99 49.07 49.16 49.23 49.27 49.33]\nedg8/tbeo 4 [49.37 49.48 49.58 49.64 49.72 49.85 49.93]\nedg8/tbeo 5 [50.37 50.48 50.54 50.58]\nedg8/tbeo 6 [50.6 50.8]\nedg8/tbeo 7 [51.   51.25]\n\n\nedg8/tbeo 8 [51.39 51.44 51.54]\nedg8/tbeo 9 [51.66 51.77 51.9  52.01]\n\n\nedg8/tbei 0 [47.75 47.77 47.78 47.8  47.82 47.86 47.93 47.97 47.99 48.01 48.03 48.06\n 48.07 48.16 48.2  48.23]\nedg8/tbei 1 [48.3  48.39 48.46 48.49 48.53 48.56 48.61]\nedg8/tbei 2 [48.61 48.67 48.73 48.8  48.84]\nedg8/tbei 3 [48.94 48.99 49.04 49.09 49.16 49.22 49.26 49.37]\nedg8/tbei 4 [49.37 49.48 49.57 49.64 49.72 49.85 49.93]\nedg8/tbei 5 [50.36 50.48 50.53 50.57]\nedg8/tbei 6 [50.62 50.79]\nedg8/tbei 7 [50.92 51.   51.14 51.25]\nedg8/tbei 8 [51.38 51.44 51.54]\nedg8/tbei 9 [51.66 51.76 51.9  52.01]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [44.66 44.7  44.76 44.8  44.84 44.88 44.93 44.97]\nedg8/tbeo 1 [44.97 44.98 45.01 45.04 45.09 45.16 45.21 45.23 45.24 45.25 45.29 45.3\n 45.31 45.33 45.34]\nedg8/tbeo 2 [45.35 45.37 45.39 45.42 45.44 45.47 45.48 45.51 45.53 45.55 45.58 45.61\n 45.62 45.64 45.66 45.68 45.7  45.72 45.75 45.76 45.79 45.81 45.82 45.84\n 45.86]\nedg8/tbeo 3 [45.88 45.9  45.93 45.95 45.99 46.01 46.05 46.08 46.12 46.15 46.17 46.19\n 46.21]\nedg8/tbeo 4 [46.21 46.23 46.25 46.27 46.3  46.31 46.35 46.37 46.39 46.41 46.43 46.46\n 46.48 46.5  46.52]\nedg8/tbeo 5 [46.54 46.56 46.57 46.59 46.61 46.63 46.65 46.67 46.68 46.71 46.74 46.77\n 46.78 46.8  46.83 46.85 46.87 46.89 46.9  46.93 46.95]\n\n\nedg8/tbei 0 [44.66 44.7  44.76 44.8  44.84 44.88 44.89 44.93 44.97]\nedg8/tbei 1 [44.97 44.98 45.01 45.04 45.09 45.16 45.21 45.23 45.24 45.25 45.29 45.3\n 45.31 45.33 45.34]\nedg8/tbei 2 [45.35 45.37 45.39 45.42 45.44 45.47 45.48 45.51 45.53 45.55 45.58 45.61\n 45.62 45.64 45.66 45.68 45.7  45.72 45.74 45.76 45.78 45.81 45.82 45.84\n 45.86]\nedg8/tbei 3 [45.88 45.9  45.93 45.95 45.98 45.99 46.01 46.02 46.05 46.08 46.09 46.12\n 46.15 46.17 46.19 46.21]\nedg8/tbei 4 [46.23 46.25 46.27 46.3  46.31 46.33 46.35 46.37 46.38 46.41 46.43 46.46\n 46.48 46.5  46.52]\nedg8/tbei 5 [46.54 46.56 46.57 46.59 46.61 46.63 46.65 46.67 46.68 46.71 46.74 46.77\n 46.78 46.8  46.83 46.85 46.87 46.89 46.9  46.93 46.95]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [54.32 54.35 54.38 54.41 54.44 54.47 54.51 54.53 54.55 54.59 54.61 54.63\n 54.65 54.67 54.7  54.73 54.75 54.78 54.8  54.82 54.86 54.88]\nedg8/tbeo 1 [54.91 54.93 54.95 54.97 54.99 55.01 55.03 55.05 55.07 55.1  55.13 55.15\n 55.17 55.19 55.22 55.25 55.28 55.3  55.32 55.35 55.37 55.39 55.41 55.44\n 55.45 55.48]\nedg8/tbeo 2 [55.51 55.53 55.56 55.58 55.61 55.63 55.65 55.68 55.71 55.73 55.75 55.77\n 55.8  55.84 55.87 55.89 55.9  55.95 55.97]\nedg8/tbeo 3 [56.01 56.05 56.11 56.14 56.16 56.18 56.21 56.23 56.26 56.32 56.36 56.38\n 56.41 56.45 56.49]\nedg8/tbeo 4 [56.52 56.56 56.59 56.61 56.64 56.67 56.7  56.73 56.76 56.78 56.81 56.83\n 56.86 56.89 56.91 56.94 56.97 56.99]\n\n\nedg8/tbei 0 [54.32 54.35 54.38 54.41 54.44 54.47 54.51 54.53 54.55 54.59 54.61 54.63\n 54.65 54.67 54.7  54.73 54.75 54.78 54.8  54.82 54.86 54.89]\nedg8/tbei 1 [54.91 54.93 54.95 54.97 54.99 55.01 55.03 55.05 55.07 55.1  55.13 55.15\n 55.17 55.19 55.22 55.25 55.28 55.3  55.32 55.35 55.37 55.39 55.41 55.44\n 55.45 55.48]\nedg8/tbei 2 [55.51 55.53 55.56 55.58 55.61 55.63 55.65 55.68 55.71 55.73 55.75 55.77\n 55.8  55.84 55.87 55.89 55.9  55.92 55.95 55.97]\nedg8/tbei 3 [56.01 56.05 56.11 56.14 56.16 56.18 56.2  56.23 56.26 56.32 56.36 56.38\n 56.41 56.45 56.49]\nedg8/tbei 4 [56.52 56.56 56.59 56.61 56.64 56.67 56.7  56.73 56.76 56.78 56.81 56.83\n 56.86 56.89 56.92 56.94 56.97 56.99]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [53.16 53.18 53.2  53.21 53.23 53.25 53.26 53.28 53.29 53.31 53.34 53.35\n 53.37 53.38 53.41 53.43 53.45 53.46 53.47 53.49 53.5  53.52 53.53 53.54\n 53.56 53.58 53.59 53.6  53.62 53.63 53.66 53.67]\nedg8/tbeo 1 [55.18 55.19 55.21 55.22 55.23 55.25 55.26 55.27 55.28 55.29 55.31 55.31\n 55.33 55.34 55.35 55.36 55.37 55.38 55.39 55.41 55.42 55.43 55.44 55.45\n 55.46 55.47 55.48 55.49 55.5  55.51 55.52 55.54 55.55 55.56 55.57 55.58\n 55.59 55.6  55.61 55.62 55.63 55.64 55.65 55.66 55.67 55.68 55.69 55.7\n 55.71 55.72 55.73]\nedg8/tbeo 2 [55.74 55.75 55.76 55.77 55.78 55.79 55.8  55.81 55.82 55.83 55.84 55.85\n 55.86 55.87 55.88 55.89 55.9  55.91 55.92 55.92 55.93 55.94 55.95 55.97\n 55.98 55.99 56.   56.01 56.02 56.03 56.04 56.05 56.06 56.07 56.08 56.09\n 56.1  56.11 56.12 56.13 56.15 56.16 56.17 56.18 56.19 56.2  56.21 56.22\n 56.23 56.24 56.25 56.27 56.28 56.29 56.29]\n\n\nedg8/tbei 0 [53.16 53.18 53.2  53.21 53.23 53.24 53.26 53.28 53.29 53.31 53.34 53.35\n 53.37 53.38 53.4  53.41 53.43 53.45 53.46 53.47 53.49 53.5  53.51 53.53\n 53.54 53.56 53.58 53.59 53.6  53.62 53.63 53.66 53.67]\nedg8/tbei 1 [55.18 55.19 55.21 55.22 55.23 55.25 55.26 55.27 55.28 55.29 55.31 55.33\n 55.34 55.35 55.36 55.37 55.38 55.39 55.4  55.42 55.43 55.44 55.45 55.46\n 55.47 55.48 55.49 55.5  55.51 55.52 55.54 55.55 55.56 55.57 55.57 55.59\n 55.6  55.61 55.62 55.63 55.64 55.65 55.66 55.67 55.68 55.69 55.7  55.71\n 55.72 55.73]\nedg8/tbei 2 [55.74 55.75 55.76 55.77 55.78 55.79 55.8  55.81 55.82 55.83 55.84 55.85\n 55.86 55.87 55.88 55.89 55.9  55.91 55.92 55.92 55.93 55.94 55.95 55.97\n 55.98 55.99 56.   56.01 56.02 56.03 56.04 56.05 56.06 56.07 56.08 56.09\n 56.1  56.11 56.12 56.13 56.15 56.16 56.17 56.18 56.19 56.2  56.21 56.22\n 56.23 56.24 56.25 56.27 56.28 56.29 56.29]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [48.86 48.89 48.93 48.94 48.97 49.01 49.03 49.06 49.1  49.14 49.17 49.19\n 49.2  49.22 49.24 49.26 49.27 49.31 49.33 49.35 49.36 49.41 49.44 49.46\n 49.48 49.49 49.51 49.53 49.54 49.56]\nedg8/tbeo 1 [49.58 49.6  49.62 49.63 49.65 49.68 49.69 49.71 49.74 49.75 49.78 49.8\n 49.83 49.85 49.86 49.88 49.89 49.91 49.92 49.94 49.96 49.98 49.99 50.01\n 50.03 50.05 50.07 50.09 50.1  50.12 50.14 50.16 50.18 50.2 ]\nedg8/tbeo 2 [50.22 50.23 50.24 50.26 50.27 50.28 50.29 50.31 50.33 50.35 50.37 50.38\n 50.39 50.4  50.42 50.44 50.46 50.49 50.5  50.51 50.53 50.55 50.56 50.58\n 50.59 50.6 ]\nedg8/tbeo 3 [50.62 50.64 50.66 50.68 50.7  50.72 50.74 50.77 50.79 50.81 50.82 50.84\n 50.86 50.87 50.89 50.9  50.92 50.95 50.96 50.98 51.   51.02 51.04 51.06\n 51.08 51.1  51.12 51.13 51.15 51.16 51.18 51.2  51.21 51.22 51.25]\nedg8/tbeo 4 [51.26 51.28 51.29 51.31 51.32 51.34 51.36 51.38 51.4  51.42 51.43 51.44\n 51.47 51.48 51.5  51.51 51.52 51.54 51.55 51.57 51.58 51.59 51.61 51.63\n 51.65 51.66 51.67 51.69 51.71 51.72 51.74 51.76]\nedg8/tbeo 5 [51.78 51.8  51.81 51.82 51.84 51.86 51.87 51.89 51.9  51.92 51.94 51.96\n 51.97 51.99 52.01 52.03 52.05 52.07 52.09 52.11 52.12]\nedg8/tbeo 6 [52.14 52.16 52.17 52.19 52.21 52.23 52.24 52.27 52.28 52.3  52.32 52.34\n 52.36 52.38 52.4  52.42 52.45 52.47 52.49 52.52 52.53 52.55 52.56 52.58\n 52.6  52.62 52.64 52.65 52.67 52.69 52.71 52.73 52.75 52.77 52.79]\nedg8/tbeo 7 [52.81 52.83 52.85 52.88 52.9  52.92 52.93 52.96 52.98 52.99 53.01 53.03\n 53.05 53.07 53.09 53.1  53.12 53.14 53.16 53.18]\nedg8/tbeo 8 [53.19 53.21 53.23 53.24 53.26 53.27 53.29 53.3  53.32 53.34 53.35 53.38\n 53.39 53.41 53.42 53.45 53.47 53.49 53.5  53.52 53.53]\nedg8/tbeo 9 [53.55 53.56 53.58 53.59 53.61 53.63 53.65 53.67 53.68 53.7  53.72 53.75\n 53.77 53.79 53.8  53.82 53.84 53.87 53.89 53.91 53.93]\nedg8/tbeo 10 [53.95 53.96 53.97 53.98 54.01 54.02 54.03 54.05 54.08 54.09 54.11 54.12\n 54.15 54.17 54.18 54.2  54.22 54.23 54.26 54.27]\nedg8/tbeo 11 [54.29 54.31 54.32 54.34 54.36 54.38 54.4  54.43 54.45 54.47 54.48 54.5\n 54.51 54.53 54.54 54.56 54.58 54.59 54.62 54.64 54.66]\nedg8/tbeo 12 [54.67 54.69 54.71 54.73 54.76 54.77 54.79 54.81 54.83 54.84 54.86 54.88\n 54.89 54.9  54.92 54.94 54.96 54.98 55.   55.02]\n\n\nedg8/tbeo 13 [55.03 55.05 55.08 55.09 55.11 55.13 55.15 55.16 55.18 55.19 55.21 55.23\n 55.24 55.25 55.27 55.29 55.31 55.32 55.33 55.35 55.37 55.39 55.42]\nedg8/tbeo 14 [55.45 55.46 55.48 55.5  55.51 55.53 55.55 55.57 55.59 55.61 55.62 55.65\n 55.66 55.68 55.7  55.73 55.74 55.76 55.78 55.8 ]\nedg8/tbeo 15 [55.82 55.84 55.87 55.89 55.91 55.93 55.95 55.98 56.01 56.03 56.06 56.08\n 56.11 56.13 56.15 56.17 56.19]\nedg8/tbeo 16 [56.2  56.23 56.25 56.27 56.29 56.32 56.34 56.35 56.36 56.39 56.41 56.43\n 56.45 56.47 56.48 56.5  56.52 56.54 56.55 56.57]\nedg8/tbeo 17 [56.59 56.61 56.62 56.64 56.65 56.66 56.69 56.71 56.73 56.75 56.76 56.78\n 56.8  56.81 56.83 56.85 56.87 56.88 56.9  56.91 56.93 56.94 56.96 56.98\n 56.99]\nedg8/tbeo 18 [57.02 57.05 57.06 57.08 57.11 57.13 57.15 57.17 57.19 57.22 57.24 57.27\n 57.29 57.3  57.32 57.35 57.37 57.39 57.41 57.43 57.45 57.47 57.49 57.51\n 57.55 57.57]\nedg8/tbeo 19 [57.58 57.61 57.63 57.64 57.66 57.69 57.71 57.74 57.76 57.78 57.81 57.83\n 57.85 57.88 57.9  57.92 57.94 57.97 57.99 58.02 58.04 58.07]\nedg8/tbeo 20 [58.09 58.1  58.12 58.14 58.17 58.19 58.21 58.22 58.24 58.26 58.28 58.29\n 58.31 58.33 58.35 58.37 58.39 58.4  58.42 58.44 58.47 58.49 58.51 58.52]\nedg8/tbeo 21 [58.54 58.56 58.58 58.6  58.63 58.65 58.68 58.7  58.72 58.74 58.77 58.79\n 58.81 58.83 58.86 58.88 58.9  58.93]\nedg8/tbeo 22 [58.94 58.97 59.   59.02 59.05 59.06 59.08 59.11 59.13 59.15 59.17 59.19\n 59.21 59.23 59.24 59.26 59.29 59.31 59.33 59.34 59.36 59.39 59.41 59.43\n 59.46 59.47 59.5 ]\n\n\nedg8/tbei 0 [48.86 48.89 48.9  48.93 48.94 48.97 49.01 49.03 49.06 49.1  49.11 49.14\n 49.17 49.19 49.2  49.22 49.24 49.25 49.27 49.3  49.33 49.34 49.36 49.37\n 49.41 49.44 49.45 49.48 49.49 49.51 49.53 49.54 49.56]\nedg8/tbei 1 [49.58 49.6  49.62 49.63 49.65 49.67 49.69 49.71 49.72 49.73 49.75 49.78\n 49.8  49.82 49.83 49.84 49.86 49.87 49.89 49.9  49.92 49.94 49.96 49.97\n 49.99 50.01 50.03 50.05 50.06 50.08 50.1  50.12 50.14 50.15 50.17 50.18\n 50.19]\nedg8/tbei 2 [50.21 50.23 50.24 50.26 50.27 50.28 50.29 50.31 50.33 50.35 50.37 50.38\n 50.39 50.4  50.42 50.44 50.46 50.49 50.5  50.51 50.53 50.54 50.56 50.58\n 50.59 50.6 ]\nedg8/tbei 3 [50.62 50.63 50.65 50.68 50.7  50.72 50.75 50.77 50.79 50.8  50.82 50.84\n 50.86 50.87 50.89 50.9  50.92 50.95 50.96 50.98 51.   51.02 51.04 51.06\n 51.07 51.1  51.11 51.13 51.14 51.16 51.18 51.19 51.22 51.24]\nedg8/tbei 4 [51.26 51.28 51.29 51.31 51.32 51.34 51.36 51.37 51.39 51.41 51.43 51.44\n 51.46 51.48 51.49 51.51 51.52 51.54 51.55 51.56 51.57 51.59 51.61 51.63\n 51.64 51.66 51.67 51.69 51.7  51.72 51.74 51.76]\nedg8/tbei 5 [51.78 51.8  51.81 51.82 51.84 51.85 51.87 51.89 51.9  51.92 51.93 51.94\n 51.96 51.97 51.99 52.01 52.02 52.05 52.07 52.09 52.11 52.12 52.14]\nedg8/tbei 6 [52.14 52.16 52.17 52.19 52.21 52.23 52.25 52.27 52.28 52.3  52.32 52.33\n 52.36 52.38 52.4  52.42 52.45 52.47 52.5  52.51 52.53 52.56 52.58 52.6\n 52.62 52.64 52.65 52.67 52.68 52.7  52.73 52.75 52.77 52.79]\nedg8/tbei 7 [52.81 52.83 52.85 52.88 52.9  52.92 52.93 52.95 52.98 52.99 53.01 53.02\n 53.05 53.07 53.1  53.12 53.14 53.15 53.18]\n\n\nedg8/tbei 8 [53.19 53.21 53.23 53.24 53.25 53.27 53.29 53.3  53.32 53.33 53.35 53.38\n 53.39 53.41 53.42 53.45 53.47 53.49 53.5  53.52 53.53]\nedg8/tbei 9 [53.55 53.56 53.57 53.59 53.61 53.63 53.65 53.66 53.68 53.7  53.72 53.74\n 53.77 53.79 53.8  53.82 53.84 53.87 53.89 53.9  53.92]\nedg8/tbei 10 [53.94 53.95 53.97 53.98 54.   54.01 54.03 54.05 54.07 54.09 54.11 54.12\n 54.15 54.17 54.18 54.2  54.21 54.23 54.24 54.26 54.27]\nedg8/tbei 11 [54.29 54.31 54.32 54.34 54.36 54.38 54.4  54.43 54.45 54.46 54.48 54.5\n 54.51 54.52 54.54 54.55 54.58 54.59 54.61 54.64 54.65]\nedg8/tbei 12 [54.67 54.69 54.71 54.73 54.75 54.77 54.79 54.81 54.82 54.84 54.87 54.89\n 54.9  54.92 54.94 54.96 54.98 54.99 55.01]\nedg8/tbei 13 [55.03 55.05 55.07 55.09 55.11 55.13 55.14 55.16 55.18 55.19 55.21 55.22\n 55.24 55.25 55.27 55.29 55.3  55.32 55.33 55.35 55.36 55.39 55.42]\nedg8/tbei 14 [55.44 55.46 55.48 55.49 55.51 55.53 55.53 55.55 55.57 55.59 55.61 55.62\n 55.63 55.65 55.66 55.68 55.7  55.71 55.73 55.74 55.76 55.78 55.8 ]\nedg8/tbei 15 [55.82 55.84 55.85 55.87 55.88 55.89 55.91 55.93 55.94 55.95 55.96 55.98\n 55.99 56.01 56.03 56.04 56.06 56.08 56.09 56.11 56.13 56.15 56.17 56.18]\nedg8/tbei 16 [56.2  56.21 56.23 56.25 56.27 56.29 56.32 56.34 56.35 56.36 56.39 56.41\n 56.43 56.45 56.47 56.48 56.5  56.52 56.53 56.55 56.57]\nedg8/tbei 17 [56.59 56.61 56.62 56.64 56.65 56.66 56.68 56.71 56.73 56.74 56.76 56.78\n 56.8  56.81 56.83 56.85 56.87 56.88 56.89 56.91 56.92 56.94 56.96 56.98\n 56.99]\nedg8/tbei 18 [57.02 57.04 57.06 57.08 57.09 57.11 57.13 57.15 57.17 57.18 57.19 57.2\n 57.22 57.24 57.27 57.28 57.29 57.3  57.32 57.34 57.35 57.37 57.39 57.41\n 57.42 57.43 57.45 57.47 57.49 57.51 57.52 57.54 57.55 57.56]\nedg8/tbei 19 [57.58 57.6  57.62 57.64 57.66 57.66 57.68 57.69 57.71 57.72 57.74 57.76\n 57.78 57.8  57.83 57.85 57.86 57.88 57.9  57.91 57.93 57.94 57.95 57.97\n 57.99 58.   58.01 58.02 58.04 58.06]\nedg8/tbei 20 [58.09 58.12 58.14 58.15 58.17 58.19 58.2  58.22 58.24 58.26 58.28 58.29\n 58.31 58.33 58.35 58.37 58.39 58.4  58.42 58.44 58.47 58.49 58.51 58.52\n 58.54]\n\n\nedg8/tbei 21 [58.54 58.56 58.58 58.6  58.62 58.63 58.65 58.67 58.7  58.72 58.74 58.76\n 58.79 58.81 58.84 58.86 58.88 58.9  58.93]\nedg8/tbei 22 [58.94 58.95 58.97 58.98 59.   59.02 59.04 59.06 59.08 59.09 59.11 59.13\n 59.15 59.17 59.18 59.19 59.21 59.22 59.24 59.26 59.28 59.31 59.32 59.34\n 59.36 59.39 59.41 59.43 59.45 59.47 59.48 59.5 ]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [49.25 49.29 49.33 49.37 49.45 49.5  49.52 49.57 49.6  49.63 49.73 49.77\n 49.79 49.83 49.86 49.88]\nedg8/tbeo 1 [50.05 50.23 50.29 50.38 50.53 50.57]\nedg8/tbeo 2 [50.61 50.65 50.78 50.86 50.92 51.06]\nedg8/tbeo 3 [51.15 51.3  51.48 51.54 51.6 ]\nedg8/tbeo 4 [51.64 51.77 51.81 51.84 51.9  51.94 52.04 52.09]\n\n\nedg8/tbei 0 [49.25 49.29 49.33 49.37 49.45 49.5  49.52 49.57 49.6  49.63 49.73 49.77\n 49.79 49.83 49.86 49.88]\nedg8/tbei 1 [50.05 50.23 50.26 50.3  50.38 50.53 50.57]\nedg8/tbei 2 [50.58 50.65 50.78 50.87 50.92 51.06]\nedg8/tbei 3 [51.15 51.3  51.48 51.54 51.6 ]\nedg8/tbei 4 [51.64 51.77 51.81 51.85 51.9  51.94 52.04 52.09]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [49.86 49.92 50.   50.08 50.14 50.22 50.28]\nedg8/tbeo 1 [50.36 50.42 50.5  50.57 50.68 50.75 50.86 50.94 51.03]\nedg8/tbeo 2 [51.06 51.08 51.11 51.12 51.14 51.16 51.19 51.21 51.24 51.26 51.29 51.32\n 51.34 51.36 51.39 51.41 51.46 51.47 51.58]\nedg8/tbeo 3 [51.83 52.32]\nedg8/tbeo 4 [52.63]\nedg8/tbeo 5 [52.91 53.03 53.17 53.31 53.45]\n\n\nedg8/tbei 0 [49.86 49.92 49.99 50.08 50.14 50.22 50.28]\nedg8/tbei 1 [50.36 50.38 50.42 50.43 50.5  50.51 50.57 50.58 50.59 50.6  50.62 50.65\n 50.68 50.69 50.75 50.76 50.77 50.8  50.81 50.83 50.86 50.87 50.94 50.95\n 50.96 51.   51.03]\nedg8/tbei 2 [51.24]\nedg8/tbei 3 [51.66 52.29]\nedg8/tbei 4 [52.63]\nedg8/tbei 5 [52.91 53.18 53.46]\n\n\n\n\n\n\n\n\nedg8/tbeo 0 [49.7  49.74 49.77 49.81 49.85 49.89 49.98 50.02 50.05 50.17 50.2  50.24\n 50.27 50.34 50.39]\nedg8/tbeo 1 [50.39 50.47 50.51 50.55 50.65 50.73 50.77 50.8  50.88 50.91 51.   51.03]\nedg8/tbeo 2 [51.09 51.18 51.28 51.32 51.35 51.4  51.49 51.53 51.56]\nedg8/tbeo 3 [51.56 51.59 51.62 51.66 51.75 51.8  51.84 51.86 51.89 51.91 52.03 52.05]\n\n\nedg8/tbei 0 [49.7  49.74 49.77 49.81 49.85 49.89 49.98 50.02 50.05 50.17 50.2  50.24\n 50.27 50.34 50.39]\nedg8/tbei 1 [50.39 50.46 50.51 50.55 50.65 50.73 50.77 50.8  50.88 50.91 51.   51.03]\nedg8/tbei 2 [51.09 51.18 51.28 51.31 51.35 51.4  51.49 51.55]\nedg8/tbei 3 [51.56 51.59 51.62 51.66 51.75 51.8  51.84 51.86 51.89 51.91 52.03 52.05]"
  },
  {
    "objectID": "auto_fusion/profile_fitting.html",
    "href": "auto_fusion/profile_fitting.html",
    "title": "Profile Fitting given time windows and elm timings",
    "section": "",
    "text": "Assuming we have time windows \\([t_1, t_2]\\) and corresponding \\(t_\\text{ELM}\\text{s}\\) within each window, we can identify measurements that fall between \\(75-99\\%\\) of the ELM cycle.\n\n\n4\n(63,)\n[11 15 17 32 29 35 38 31 38] 6\n\n\n\n\n\n(63,)\n[35  8 17 22 35 39 28 18 33 22 28 27] 9\n\n\n\n\n\n(63,)\n[16 27 29 27 16 22 31 28 22 28 29 35 34 35] 12\n\n\n\n\n\n(63,)\n[19 30 38 23 25 24 28 23] 7\n\n\n\n\n\ntraditionally, one would scope out those that are between the elm cycle, but I suggest a prior belief that the profiles are at the PB boundrary, i.e., at or near the max values for 0.5 <= Psi <= 0.75 given in the set, then checking for ELM percentages that allign."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "notebook",
    "section": "",
    "text": "The website is enabled by Quarto."
  },
  {
    "objectID": "misc/data_to_model.html",
    "href": "misc/data_to_model.html",
    "title": "Data becomes the model",
    "section": "",
    "text": "Here we will take the JET pedestal database1 and show how with large capacity modeling tools, such as XGboost2, the data used to fit becomes the model."
  },
  {
    "objectID": "misc/data_to_model.html#splitting-of-the-dataset-into-subsets",
    "href": "misc/data_to_model.html#splitting-of-the-dataset-into-subsets",
    "title": "Data becomes the model",
    "section": "Splitting of the dataset into subsets",
    "text": "Splitting of the dataset into subsets\nWe can artificially create the idea of gathering more data via upgrades to the device or knowledge base by splitting the dataset by shot number Fig.Â 1.\n\n\n\n\n\nFigureÂ 1: All shots before #81000 are done with a carbon wall (JET-C). After that, JET was upgrade to include an â€˜ITER-like wallâ€™ (JET-ILW).\n\n\n\n\nWe can preform regression on the following subsets of the full dataset:\n\nBoth JET-C and JET-ILW\nJET-C\nJET-ILW\n\nAnd we can compare performances on all of the above by predicting against\n\nJET-ILW\nJET-C\n\n\n\n\n\n\nAn example of training and test splits.\n\n\n\n\nwhile keeping the input parameters the same: The input parameters (scalars) used for both models are: total plasma current, toroidal field strength, minor radius, total power injected, volume, \\(q_{95}\\), eloncation, average triangularity, total gas injected.\n\n\n\n\n\nComparison of XGBoost and linear regression."
  },
  {
    "objectID": "notebook.html",
    "href": "notebook.html",
    "title": "notebook",
    "section": "",
    "text": "The website is enabled by Quarto."
  },
  {
    "objectID": "stability/bootstrap_current.html",
    "href": "stability/bootstrap_current.html",
    "title": "On the bootstrap current in tokamaks",
    "section": "",
    "text": "To achieve fusion, we need to confine the plasma for sufficient time. Without instabillities, the majority of confinement comes from Coulomb collisions, but transport of particles and energy is generally not so simple, leading to anamolous transport mechanisms.\nIn a cylindrical plasma, the collisional transport of particles and energy boils down to a diffusion process. Particles collide with a characteristic rate time \\(\\tau_c\\). The collision allows the particles to â€˜stepâ€™ accross magnetic field with a step length equal to their larmor radius, \\(\\rho\\). This yields us a diffusion coefficient, \\(\\mathcal{D} \\sim \\rho^2 / \\tau_c\\), of particles and energy diffusing radially outwards.\nFor a toroidal plasma with twisted helical field lines, this is not the case, which is why transport in toroidal plasma is refered to as neoclassical transport. An example of such a change in transport is banana transport."
  },
  {
    "objectID": "stability/bootstrap_current.html#bootstrap-current",
    "href": "stability/bootstrap_current.html#bootstrap-current",
    "title": "On the bootstrap current in tokamaks",
    "section": "Bootstrap current",
    "text": "Bootstrap current\nFriction related to transport from particles in banana orbit (collisions between trapped and non-trapped particles) leads to a diffusion driven current, otherwise known as the bootstrap current. This is different than the conventional current from the central solenoid.\nThe current is brought on by the change in the \\(\\nabla_T \\vec{B} \\times \\vec{B}\\) component from LFS to HFS, as the \\(B_{pol}\\) is rotating around the outer plamsa, and \\(\\nabla \\vec{B}\\) constant pointing inwards from the drift. This corresponds to the following additional drifts:\n\nFor particles near the LFS, i.e., \\(r > R\\), we will get a drift (with charge dependence due to eq. Eq.Â 1)\n\nions: in the direction of the current\nelectrons: opposite direction of current\n\nFor particles near HFS:\n\nions: opposite direction of the current\nelectrons: opposite direction of current\n\n\nSince particles spend a longer time in the reflecting stage of the banana orbit (??), there is a resulting net drift in the direction of the current, as the trapped particlestransfer momentum to passing particles carrying the current. The name derives itself from the idea that the particles themselves are contributing to the confining poloidal field, hence the plasma itself is bootstraping its confinement, pulling oneself.\nA simple quantitive estimation is \\(j_{bs} = -\\sqrt{\\epsilon} \\frac{1}{B_\\theta} \\frac{dp}{dr}\\), where the \\(B_\\theta\\) the poloidal field strength and \\(p\\) the plasma pressure.\nThe bootstrap current is important for stability analysis.\n\n\n\n\n\nWith a steeper pressure gradient, e.g., in H-mode, we have a larger boostrap current\n\n\n\n\n\nVery complicated formula that I use\nIn1:\n\\[\\langle \\vec{j}_b \\cdot \\vec{B} \\rangle = \\frac{\\mu_0 f(\\Psi) x p_e}{D(x)} \\left( c_1 \\frac{\\nabla p_e}{p_e} + c_2 \\frac{\\nabla p_i}{p_i}  + c_3 \\frac{\\nabla T_e}{T_e} + c_4 \\frac{\\nabla T_i}{T_i} \\right)\\]\nwhere:\n\n\\(f(\\Psi) = RB_\\phi(\\Psi) / \\mu_0\\)\n\nIf we want to do this integral approximation, we will need to transform the magnetic field into flux coordinatesâ€¦\n\n\\(x\\) is ratio of number of trapped to circulating particles, which can be approximated to \\(\\simeq \\sqrt{2}\\epsilon^{1/2}\\) with \\(\\epsilon=a/R\\)\n\nFor \\(D(x) = 2.4 + 5.4x + 2.6x^2\\) and used sporatically in below coefficients\n\n\\(c_1 = \\frac{4.0 + 2.6x}{(1+0.2\\nu_{*e}^{1/2} + 1.07\\nu_{*e})(1+1.07\\epsilon^{3/2}\\nu_{*e})}\\)\n\\(c_2 = \\frac{T_i}{T_e} c_1\\)\n\\(c_3 = \\frac{7.0 + 6.5x}{(1+0.57\\nu_{*e}^{1/2} + 0.61\\nu_{*e})(1+0.61\\epsilon^{3/2}\\nu_{*e})} - \\frac{5}{2}c_1\\)\n\\(c_4 = \\left( \\frac{d+0.35\\nu_{*i}^{1/2}}{1+0.7\\nu_{*i}^{1/2}} +2.1\\epsilon^3\\nu_{*i}^{2}\\right) \\frac{1}{(1+\\epsilon^3\\nu_{*i}^{2})(1+ \\epsilon^3\\nu_{*e}^{2})}c_2\\)\n\n\\(d = \\frac{1.17}{1+0.46x}\\)\n\n\\(\\nu_{*j}=\\frac{\\nu_j}{\\epsilon \\omega_{bj}}\\)\n\nwhere \\(\\nu_e = \\tau_e^{-1}\\), \\(\\nu_i = \\tau_i^{-1}\\) and \\(\\omega_{bj} = \\epsilon^{1/2}(T_j/m_j)^{1/2} / Rq\\)\n\nwhere the electron collision time for electron collisions with ions is defined as \\(\\tau_e = \\frac{12\\pi^{3/2}}{\\sqrt{2}}\\frac{\\epsilon_0 m_e^{1/2}T_e^{3/2}}{n_iZ^2e^4\\ln \\Lambda}\\) but can be simplified for singly charged ions to be \\(6.4\\times 10^{14} \\frac{T_e^{3/2}}{n}\\), with \\(\\ln \\Lambda = 17\\) and \\(T_e\\) in keV.\nwhere the ion collision time characterizing ion collisions with other ions \\(\\tau_i = 12\\pi^{3/2} \\frac{\\epsilon_0^2 m_i^{1/2}T_i^{3/2}}{n_iZ^4e^4\\ln\\Lambda_i}\\); \\(\\Lambda_i = 1.1\\Lambda\\) but can be simplified for singly charged ions to be \\(6.6\\times 10^{17} \\left( \\frac{m_i}{m_p}\\right)^{1/2} \\frac{T_i^{3/2}}{n\\ln\\Lambda_i}\\) for \\(T_i\\) in keV\n\n\n\nWe can make even more simplifying assumptions, namely \\(n_e \\approx n_i\\), \\(T_e \\approx T_i\\) \\(\\Rightarrow p_e = p_i\\), reducing to\n\\[ j_b = \\langle \\vec{j}_b \\cdot \\vec{B} \\rangle = \\frac{\\mu_0 f(\\Psi) x p_e}{D(x)} \\left( 2(c_1 + c_2)\\frac{\\nabla p_e}{p_e} + 2(c_3 + c_4)\\frac{\\nabla T_e}{T_e}\\right)\\]"
  },
  {
    "objectID": "stability/bootstrap_current.html#fun-facts",
    "href": "stability/bootstrap_current.html#fun-facts",
    "title": "On the bootstrap current in tokamaks",
    "section": "Fun facts",
    "text": "Fun facts\nAlthough one would want to maximize the bootstrap current, in stellarators we actually minimize it as to not fuck up the delicate magnetic geometry."
  },
  {
    "objectID": "stability/intro_old.html",
    "href": "stability/intro_old.html",
    "title": "Calculating stability parameters from data",
    "section": "",
    "text": "Pressure gradient / \\(\\alpha_{\\text{max}}\\)\n\n\\(\\alpha_{\\text{max}}\\) is defined in1\n\nMagnetic shear / Boostrap current\n\nA simple (relative) formula is given in2\n\n\n\\[\\langle \\vec{j}_b \\cdot \\vec{B} \\rangle = \\frac{\\mu_0 f(\\Psi) x p_e}{D(x)} \\left( c_1 \\frac{\\nabla p_e}{p_e} + c_2 \\frac{\\nabla p_i}{p_i}  + c_3 \\frac{\\nabla T_e}{T_e} + c_4 \\frac{\\nabla T_i}{T_i} \\right)\\]\nwhere:\n\n\\(f(\\Psi) = RB_\\phi(\\Psi) / \\mu_0\\)\n\nIf we want to do this integral approximation, we will need to transform the magnetic field into flux coordinatesâ€¦\n\n\\(x\\) is ratio of number of trapped to circulating particles, which can be approximated to \\(\\simeq \\sqrt{2}\\epsilon^{1/2}\\) with \\(\\epsilon=a/R\\)\n\nFor \\(D(x) = 2.4 + 5.4x + 2.6x^2\\) and used sporatically in below coefficients\n\n\\(c_1 = \\frac{4.0 + 2.6x}{(1+0.2\\nu_{*e}^{1/2} + 1.07\\nu_{*e})(1+1.07\\epsilon^{3/2}\\nu_{*e})}\\)\n\\(c_2 = \\frac{T_i}{T_e} c_1\\)\n\\(c_3 = \\frac{7.0 + 6.5x}{(1+0.57\\nu_{*e}^{1/2} + 0.61\\nu_{*e})(1+0.61\\epsilon^{3/2}\\nu_{*e})} - \\frac{5}{2}c_1\\)\n\\(c_4 = \\left( \\frac{d+0.35\\nu_{*i}^{1/2}}{1+0.7\\nu_{*i}^{1/2}} +2.1\\epsilon^3\\nu_{*i}^{2}\\right) \\frac{1}{(1+\\epsilon^3\\nu_{*i}^{2})(1+ \\epsilon^3\\nu_{*e}^{2})}c_2\\)\n\n\\(d = \\frac{1.17}{1+0.46x}\\)\n\n\\(\\nu_{*j}=\\frac{\\nu_j}{\\epsilon \\omega_{bj}}\\)\n\nwhere \\(\\nu_e = \\tau_e^{-1}\\), \\(\\nu_i = \\tau_i^{-1}\\) and \\(\\omega_{bj} = \\epsilon^{1/2}(T_j/m_j)^{1/2} / Rq\\)\n\nwhere the electron collision time for electron collisions with ions is defined as \\(\\tau_e = \\frac{12\\pi^{3/2}}{\\sqrt{2}}\\frac{\\epsilon_0 m_e^{1/2}T_e^{3/2}}{n_iZ^2e^4\\ln \\Lambda}\\) but can be simplified for singly charged ions to be \\(6.4\\times 10^{14} \\frac{T_e^{3/2}}{n}\\), with \\(\\ln \\Lambda = 17\\) and \\(T_e\\) in keV.\nwhere the ion collision time characterizing ion collisions with other ions \\(\\tau_i = 12\\pi^{3/2} \\frac{\\epsilon_0^2 m_i^{1/2}T_i^{3/2}}{n_iZ^4e^4\\ln\\Lambda_i}\\); \\(\\Lambda_i = 1.1\\Lambda\\) but can be simplified for singly charged ions to be \\(6.6\\times 10^{17} \\left( \\frac{m_i}{m_p}\\right)^{1/2} \\frac{T_i^{3/2}}{n\\ln\\Lambda_i}\\) for \\(T_i\\) in keV\n\n\n\nWe can make even more simplifying assumptions, namely \\(n_e \\approx n_i\\), \\(T_e \\approx T_i\\) \\(\\Rightarrow p_e = p_i\\), reducing to\n\\[ j_b = \\langle \\vec{j}_b \\cdot \\vec{B} \\rangle = \\frac{\\mu_0 f(\\Psi) x p_e}{D(x)} \\left( 2(c_1 + c_2)\\frac{\\nabla p_e}{p_e} + 2(c_3 + c_4)\\frac{\\nabla T_e}{T_e}\\right)\\]\n\n\n5.2386603 2.5164504\n1.6118822 0.501923 5.2386603 2.5164504 798332.6"
  },
  {
    "objectID": "stability/intro_old.html#pressure-gradient",
    "href": "stability/intro_old.html#pressure-gradient",
    "title": "Calculating stability parameters from data",
    "section": "Pressure gradient",
    "text": "Pressure gradient\nPressure gradient at a given time\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTools\n\nInteresting plots\n,3,\nreflectometry\nDoppler"
  }
]